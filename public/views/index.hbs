<html>
  <head>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet">
    <title>Air Message</title>
    <link rel="icon" href="favicon.png">
    <style>
      ::-webkit-scrollbar{
        width: 5px;
        background-color: transparent;
        margin-right: 10px;
      }
      ::-webkit-scrollbar-thumb{
        width: 5px;
        background-color: gray;
      }
      .rad > input {
      visibility: hidden;
      position: absolute;
      }
      .rad > i {
      display: inline-block;
      margin-top: 0px;
      margin-left: 50px;
      margin-bottom: 0px;
      width: 15px;
      height: 15px;
      border-radius: 50%;
      transition: 0.2s;
      box-shadow: inset 0 0 0 8px #fff;
      border: 0px solid gray;
      }
      .rad > input:checked + i {
      box-shadow: inset 0 0 0 3px #fff;
      background: rgb(51, 51, 51);
      }
    </style>
  </head>
  <body id="themeColor" style="background-color: #202020; margin: 0px; outline: none;">
    <nav style="width: 100vw; height: 50px; position: relative; box-shadow: 0 0 20px rbga(0, 0, 0, 0.4)">
      <img src="whiteIcon.png" style="width: 30px; margin-top: 10px; margin-left: 10px;">
      <button style="font-size: auto; border: 1.5px solid gray; color: white; background-color: transparent; font-family: open sans; padding: 4px; padding-left: 10px; padding-right: 10px; height: 35px; position: absolute; top: 50%; margin-top: -17.5px; left: 50px; outline: none;" id="connect" onclick="connectUser()">Connect</button><!--
      --><button style="font-size: auto; border: 1.5px solid gray; color: white; background-color: transparent; font-family: open sans; padding: 4px; padding-left: 10px; padding-right: 10px; height: 35px; position: absolute; top: 50%; margin-top: -17.5px; left: 135px;" id="settings" onclick="openSettings()">Settings</button><!--
      --><button style="font-size: auto; border: 1.5px solid gray; color: white; background-color: transparent; font-family: open sans; padding: 4px; padding-left: 10px; padding-right: 10px; height: 35px; position: absolute; top: 50%; margin-top: -17.5px; left: 217px;" id="createUsername" onclick="openUsername()">Username</button><!--
      --><button onclick="window.location='https://airmessage.flightdude.repl.co/'"style="font-size: auto; border: 1.5px solid gray; color: white; background-color: #810000; font-family: open sans; padding: 4px; padding-left: 10px; padding-right: 10px; height: 35px; position: absolute; top: 50%; margin-top: -17.5px; left: 315px;">X</button>
    </nav>
    <div style="width: 100vw; height: calc(100vh - 70px);">
      <div style="float: left; width: 300px; height: 100%;">
        <center>
          <p id="controller" style="height: 15px; margin-top: 10px; margin-bottom: 10px; color: white; font-size: 15px; font-family: monospace; margin-left: 10px;">Controllers in Range:</p>
          <div id="controllers" style="overflow-x: none; overflow-y:scroll; width: 100%; height: calc(100% - 35px); border: 1.5px solid gray; background-color: transparent; margin-left: 10px; text-align: left;"></div>
        </center>
      </div>
      <div style="float: right; width: calc(100vw - 350px); height: 100%; margin-right: 15px;">
        <p id="message" style="height: 27px; width: auto; margin: 0px;border-top-left-radius: 10px; border-top-right-radius: 10px;background-color: transparent; width: 100px; color: white;font-family: monospace; border: 1.5px solid gray; border-bottom: none; padding-top: 8px; font-size: 15px;text-align: center;">Messages</p>
        <center>
          <div id="messageBox" style="width: 100%; height: calc(100% - 35px); border: 1.5px solid gray; background-color: transparent; position: relative;">
            <div id="afterColor" style="border: 5px solid #202020; width: 90px; backgrond-color:; position: absolute; top: -2px; left: 0px;"></div>
            <div style="width: calc(100% - 20px); height: calc(100% - 70px); border: 1px solid gray; margin: 10px; text-align: left; overflow: none; overflow-y: scroll; position: relative;" id="messages-node">
              <div id="typing" style="position: absolute; bottom: 0px; left: 0px; width: 100%; height: 20px; text-align: center;"></div>
              <p id="typing-text" style="color: #FFFF00; font-family: monospace; position: absolute; bottom: 0px; width: 100%;text-align: center; left: 0px;"></p>
            </div>
            <input type="text" style="width: calc(100% - 20px); padding-left: 10px; caret-color: white; height: 35px; border: 1px solid gray; background-color: transparent; margin: 10px; margin-top: 0px; color: white; outline: none;font-family: monospace" placeholder="Write your message here." id="messageListner">
          </div>
        </center>
      </div>
    </div>
     <div id="darkenscreen" style="display: none; width: 100vw; height: 100vw; background-color: #1a1a1a; opacity: 0.5; position: fixed; top: 0; left: 0; z-index: 10"></div>
    <div id="username-input" style="text-align: center; display: none; width: 250px; height: 150px; background-color: #333333; position: absolute; top: 50%; margin-top: -120px; left: 50%; margin-left: -140px; border-radius: 0px; border: solid 2px; border-color: grey; padding: 15px; z-index: 10;">
      <h1 style="font-family: open sans; font-size: 20px; color: white; margin-bottom: 5px;">Welcome to AirMessage!</h1>
      <input id="clientName" type="text" style="width: 200px; border: none; border-bottom: 3px solid grey; padding: 10px; font-family: open sans; padding-left: 2px; outline: none; background-color: transparent; color: white;" placeholder="Type your username" autocomplete="off">
      <button id="username" style="width: 200px; height: 30px; border-radius: 0px; background-color: transparent; color: white; border: solid 2px grey; box-shadow: 0 0 10px rgba(255, 255, 255, 0.4); margin-top: 25px;" onclick="usernameCheck()">Chat</button>
    </div>
    <div id="darkenscreenset" style="display: none; width: 100vw; height: 100vw; background-color: #1a1a1a; opacity: 0.5; position: fixed; top: 0; left: 0; z-index: 10"></div>
    <div id="settings-input" style="text-align: center; display: none; width: 250px; height: 150px; background-color: #333333; position: absolute; top: 50%; margin-top: -120px; left: 50%; margin-left: -140px; border-radius: 0px; border: solid 2px; border-color: grey; padding: 15px; z-index: 10;">
      <h1 style="font-family: open sans; font-size: 20px; color: white; margin-bottom: 5px;">Settings</h1>
      <div style="text-align: left; margin-top: 15px; width: 500px;">
      <p style="margin-bottom: 0px; margin-top: 20px; margin-left: 0px;">
           <label class="rad" style="color: grey; margin-left: -50px; font-size: 15px; font-family: open sans;">
           <input type="radio" checked="true" id="dark"/>
           <i></i> Dark Theme
           </label>
           <label style="color: grey; font-size: 15px; margin-left: -30px; font-family: open sans;" class="rad">
           <input type="radio" id="light"/>
           <i></i> Light Theme
           </label>
           </p>
           </div>
      <button id="savesettings" style="margin-top: 30px; width: 200px; height: 30px; border-radius: 0px; background-color: transparent; color: white; border: solid 2px grey; box-shadow: 0 0 10px rgba(255, 255, 255, 0.4);" onclick="closeSettings()">Save</button>
    </div>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var dark = true;
    var socket = io()
    var username = false;
    var usernameString = ""
    var connected = false

    /*this.addEventListener('keydown', (e) => {
      if (e.keyCode == 17) {
        connectUser()
      } else if (e.keyCode == 18) {
        openUsername()
      }
    })*/

    

    document.getElementById('messageListner').addEventListener('keyup', (e) => {
      e.preventDefault()
      if (e.keyCode == 13){
        if (connected == true) {
          var message = document.getElementById('messageListner').value
          socket.emit('printMessage', message, usernameString)
          document.getElementById('messageListner').value = ""
          console.log(usernameString)
        } else {
          terminal("[SERVER] You are not connected. To log into Air Message, click the 'Username' button at the top, and type in your username. Then, select 'Connect' to connect to the server.", "error")
          document.getElementById('messageListner').value = ""
        }
      } else {
        if (connected) {
          socket.emit('keydown-user', usernameString)
        }
      }
    })

    socket.on('new-message', (message, username) => {
      document.getElementById('typing-text').style.display = "none"
      var newMessage = document.createElement('p')
      newMessage.style.margin = "10px"
      newMessage.marginBottom = "1px"
      if (dark) {
        newMessage.style.color = "#FFFF00"
      } else if (!dark) {
        newMessage.style.color = "#000000"
      }
      newMessage.style.fontFamily = "monospace"
      newMessage.classList.add('message')
      newMessage.innerHTML = username + ": " + message
      newMessage.style.fontSize = "15px"
      document.getElementById("messages-node").appendChild(newMessage)
      var messageBox = document.getElementById('messages-node')
      messageBox.scrollTop = messageBox.scrollHeight
    })

    var arrayIndex = 0

    socket.on('user-is-typing', (username) => {
      document.getElementById('typing-text').innerHTML = username + " is typing..."
      if (dark) {
        document.getElementById('typing-text').style.color = "#FFFF00"
      } else if (!dark) {
        document.getElementById('typing-text').style.color = "#000000"
      }
      document.getElementById('typing-text').style.display = "block"
    })

    var typing = []

    document.getElementById('clientName').addEventListener('keyup', (e) => {
      e.preventDefault()
      if (e.keyCode == 13) {
        usernameCheck()
      } else {

      }
    })

    var usernameTimes = 0

    function openUsername() {
      if (usernameTimes == 0) {
        document.getElementById('username-input').style.display = "block"
        document.getElementById('darkenscreen').style.display = "block"
        usernameTimes++
      } else if (usernameTimes == 1) {
        document.getElementById('connect').style.backgroundColor = "transparent"
        socket.emit('disconnected-user', sessionStorage.getItem('socket-id'))
        socket.emit('terminal-receive', "[SERVER] " + usernameString + " has disconnected")
        terminal("[SERVER] Don't worry! We just disconnected you so you could change your username. Just input your new username, click 'Connect' and start chatting again!", "info")
        connected = false
        document.get
        usernameTimes = 0
      }
    }

    function openSettings(){
       document.getElementById('settings-input').style.display = "block"
      document.getElementById('darkenscreenset').style.display = "block"
    }

    function closeSettings(){
      document.getElementById('settings-input').style.display = "none"
      document.getElementById('darkenscreenset').style.display = "none"
    }

    document.getElementById('dark').addEventListener('click', () => {
      document.getElementById('connect').style.color = "white"
      document.getElementById('settings').style.color = "white"
      document.getElementById('createUsername').style.color = "white"
      document.getElementById('themeColor').style.backgroundColor = "#202020"
      document.getElementById('afterColor').style.borderColor = "#202020"
      document.getElementById('dark').checked = true
      document.getElementById('light').checked = false
      document.getElementById('controller').style.color = "white"
      document.getElementById('message').style.color = "white"
      document.getElementById('messageListner').style.color = "white"
      document.getElementById('messageListner').style.caretColor = "white"
      dark = true
      for (var i = 0; document.getElementsByClassName('controller').length; i++) {
        try{
          var ele = document.getElementsByClassName('controller')[i]
          ele.style.color = "#FFFF00"
        } catch(e) {
          break;
        }
      }
      for (var i = 0; document.getElementsByClassName('message').length; i++) {
        try{
          var ele = document.getElementsByClassName('message')[i]
          ele.style.color = "#FFFF00"
        } catch(e) {
          break;
        }
      }
    })

    document.getElementById('light').addEventListener('click', () => {
      document.getElementById('connect').style.color = "black"
      document.getElementById('settings').style.color = "black"
      document.getElementById('createUsername').style.color = "black"
      document.getElementById('themeColor').style.backgroundColor = "#e6e6e6"
      document.getElementById('light').checked = true
      document.getElementById('dark').checked = false
      document.getElementById('controller').style.color = "black"
      document.getElementById('messageListner').style.color = "black"
      document.getElementById('messageListner').style.caretColor = "black"
      document.getElementById('afterColor').style.borderColor = "#e6e6e6"
      document.getElementById('message').style.color = "black"
      dark = false
      for (var i = 0; document.getElementsByClassName('controller').length; i++) {
        try{
          var ele = document.getElementsByClassName('controller')[i]
          ele.style.color = "black"
        } catch(e) {
          break;
        }
      }
      for (var i = 0; document.getElementsByClassName('message').length; i++) {
        try{
          var ele = document.getElementsByClassName('message')[i]
          ele.style.color = "black"
        } catch(e) {
          break;
        }
      }
    })


    function usernameCheck(){
      var input = document.getElementById('clientName').value
      if (input == "") {
        terminal("[SERVER] You must choose a valid username.", "error")
        document.getElementById('username-input').style.display = "none"
        document.getElementById('darkenscreen').style.display = "none"
      } else {
        localStorage.setItem('username', input)
        document.getElementById('username-input').style.display = "none"
        document.getElementById('darkenscreen').style.display = "none"
        username = true
        usernameString = input
        document.getElementById('connect').style.backgroundColor = "transparent"
        socket.emit('disconnected-user', sessionStorage.getItem('socket-id'))
        document.getElementById('createUsername').style.backgroundColor = "limegreen"
        terminal("[SERVER] Select 'Connect' to connect to the server and start chatting!", "info")
      }
    }

    var onPress = 0;
    function connectUser() {
      if (onPress == 0) {
        if (username == true) {
          document.getElementById('connect').style.backgroundColor = "#005C5C"
          socket.emit('new-user', usernameString)
          socket.emit('terminal-receive', "[SERVER] " + usernameString + " has connected.")
          document.getElementById('createUsername').style.backgroundColor = "#005C5C"
          connected = true
          onPress++
        } else {
          document.getElementById('createUsername').style.backgroundColor = "#990000"
          terminal("[SERVER] You do not currently have a username.", "error")
          onPress = 0;
        }
      } else if (onPress == 1) {
        document.getElementById('connect').style.backgroundColor = "transparent"
        socket.emit('disconnected-user', sessionStorage.getItem('socket-id'))
        socket.emit('terminal-receive', "[SERVER] " + usernameString + " has disconnected")
        connected = false
        onPress = 0;
      }
    }

    socket.on('terminal', (info) => {
      terminal(info, "info")
    })

    socket.on('get-id', (id) => {
      sessionStorage.setItem('socket-id', id)
    })

    socket.on('add-controller', (username, id) => {
      var newController = document.createElement('p')
      newController.style.margin = "10px"
      newController.marginBottom = "1px"
      if (dark) {
        newController.style.color = "#FFFF00"
      } else if (!dark) {
        newController.style.color = "#000000"
      }
      newController.style.fontFamily = "monospace"
      newController.innerHTML = "1" + Math.floor(Math.random()*2 + 1) +  Math.floor(Math.random()*9) + "." + Math.floor(Math.random()*9) +  "0" + ": " + username
      newController.id = id
      newController.classList.add('controller')
      newController.style.fontSize = "15px"
      newController.addEventListener('click', (e) => {
        e.preventDefault()
        var message = document.getElementById('messageListner').value
        socket.emit('private-message', username, id, message)
      })
      document.getElementById("controllers").appendChild(newController)
    })

    socket.on('private-message-client', (username, message) => {
      var newMessage = document.createElement('p')
      newMessage.style.margin = "10px"
      newMessage.marginBottom = "1px"
      if (dark) {
        newMessage.style.color = "#FFFF00"
      } else if (!dark){
        newMessage.style.color = "#000000"
      }
      newMessage.style.fontFamily = "monospace"
      newMessage.classList.add('message')
      newMessage.innerHTML = username + " [PRIVATE]" + ": " + message
      newMessage.style.fontSize = "15px"
      document.getElementById("messages-node").appendChild(newMessage)
      var messageBox = document.getElementById('messages-node')
      messageBox.scrollTop = messageBox.scrollHeight
    })

    socket.on('delete-user', (id) => {
      var removing = document.querySelector('#' + id)
      removing.parentNode.removeChild(removing)
    })

    function terminal(information, type) {
      var newMessage = document.createElement('p')
      newMessage.style.margin = "10px"
      newMessage.marginBottom = "1px"
      if (type == "info"){
        newMessage.style.color = "#FFFFFF"
      } else if (type == "error") {
        newMessage.style.color = "#FF0000"
      }
      newMessage.style.fontFamily = "monospace"
      newMessage.innerHTML = information
      newMessage.style.fontSize = "15px"
      document.getElementById("messages-node").appendChild(newMessage)
      var messageBox = document.getElementById('messages-node')
      messageBox.scrollTop = messageBox.scrollHeight
    }
  </script>
</html>